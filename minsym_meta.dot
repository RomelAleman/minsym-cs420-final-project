
    digraph textX {
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    node[
        shape=record,
        style=filled,
        fillcolor=aliceblue
    ]
    nodesep = 0.3
    edge[dir=black,arrowtail=empty]


2225850822208[ label="{Program|}"]

2225851326672[ label="{*ProgramStatement|}"]

2225851323472[ label="{CreateFunctionStatement|name: ID\lreturn_type: Type\l}"]

2225850994624[ label="{CreateClassStatement|name: ID\l}"]

2225850994320[ label="{*MainStatement|}"]

2225850708720[ label="{IgnoreStatement|content: PossibleIgnoreStatement\l}"]

2225850935200[ label="{PrintStatement|}"]

2225851143248[ label="{WhileStatement|}"]

2225851143504[ label="{AssignmentStatement|}"]

2225850432832[ label="{CallFunction|name: ID\l}"]

2225850431872[ label="{IterateStatement|multiple: NUMBER\l}"]

2225850447728[ label="{*InnerFunctionStatement|}"]

2225850449072[ label="{CreateObjectStatement|object_name: ID\lclass_name: ID\l}"]

2225851045232[ label="{AccessClassObject|instance_name: ID\l}"]

2225848875536[ label="{CreateMethodStatement|name: ID\lreturn_type: Type\l}"]

2225851122128[ label="{IfStatement|}"]

2225850622816[ label="{IfBlock|}"]

2225850624576[ label="{ElseIfBlock|}"]

2225851534224[ label="{ElseBlock|}"]

2225851534384[ label="{*InnerIfStatement|}"]

2225850378160[ label="{*Conditional|}"]

2225851442640[ label="{ReturnStatement|}"]

2225851441360[ label="{Operation|op: OperationOperator\l}"]

2225849866192[ label="{Comparison|op: ComparisonOperator\l}"]

2225851571664[ label="{*Identifier|}"]

2225851571792[ label="{*ClassAttribute|}"]

2225851571920[ label="{Parameter|var: optional\<list[ID]\>\l}"]

2225851572048[ label="{Argument|var: optional\<list[Variable]\>\l}"]

2225851572176[ label="{*Expression|}"]

2225851572304[ label="{*OperationOperand|}"]

2225851572560[ label="{*ComparisonOperand|}"]

2225851572816[ label="{VarRef|name: ID\l}"]

2225851572944[ label="{AttrRef|name: ID\l}"]

2225851573072[ label="{ObjectAttrRef|name: ID\lattr: ID\l}"]



2225850822208 -> 2225851326672[arrowtail=diamond, dir=both, headlabel="statements 0..*"]
2225851326672 -> 2225850994320 [dir=back]
2225851326672 -> 2225851323472 [dir=back]
2225851326672 -> 2225850994624 [dir=back]
2225851326672 -> 2225850708720 [dir=back]
2225851323472 -> 2225851571920[arrowtail=diamond, dir=both, headlabel="parameters "]
2225851323472 -> 2225850447728[arrowtail=diamond, dir=both, headlabel="inner_function_statements 0..*"]
2225850994624 -> 2225851571920[arrowtail=diamond, dir=both, headlabel="parameters "]
2225850994624 -> 2225848875536[arrowtail=diamond, dir=both, headlabel="inner_class_statements 0..*"]
2225850994320 -> 2225850431872 [dir=back]
2225850994320 -> 2225850935200 [dir=back]
2225850994320 -> 2225851143504 [dir=back]
2225850994320 -> 2225851143248 [dir=back]
2225850994320 -> 2225851122128 [dir=back]
2225850994320 -> 2225850432832 [dir=back]
2225850994320 -> 2225850449072 [dir=back]
2225850994320 -> 2225851045232 [dir=back]
2225850935200 -> 2225851572176[arrowtail=diamond, dir=both, headlabel="val 0..*"]
2225851143248 -> 2225850378160[arrowtail=diamond, dir=both, headlabel="condition "]
2225851143248 -> 2225850994320[arrowtail=diamond, dir=both, headlabel="inner_while_statements 0..*"]
2225851143504 -> 2225851572176[arrowtail=diamond, dir=both, headlabel="val "]
2225851143504 -> 2225851571664[arrowtail=diamond, dir=both, headlabel="var "]
2225850432832 -> 2225851572048[arrowtail=diamond, dir=both, headlabel="args "]
2225850431872 -> 2225851572816[arrowtail=diamond, dir=both, headlabel="var "]
2225850447728 -> 2225851442640 [dir=back]
2225850447728 -> 2225850994320 [dir=back]
2225850449072 -> 2225851572048[arrowtail=diamond, dir=both, headlabel="args "]
2225851045232 -> 2225851571792[arrowtail=diamond, dir=both, headlabel="attribute "]
2225848875536 -> 2225851571920[arrowtail=diamond, dir=both, headlabel="parameters "]
2225848875536 -> 2225850447728[arrowtail=diamond, dir=both, headlabel="inner_function_statements 0..*"]
2225851122128 -> 2225850622816[arrowtail=diamond, dir=both, headlabel="if_block "]
2225851122128 -> 2225850624576[arrowtail=diamond, dir=both, headlabel="else_if_blocks 0..*"]
2225851122128 -> 2225851534224[arrowtail=diamond, dir=both, headlabel="else_block "]
2225850622816 -> 2225850378160[arrowtail=diamond, dir=both, headlabel="condition "]
2225850622816 -> 2225851534384[arrowtail=diamond, dir=both, headlabel="inner_if_statements 0..*"]
2225850624576 -> 2225850378160[arrowtail=diamond, dir=both, headlabel="condition "]
2225850624576 -> 2225851534384[arrowtail=diamond, dir=both, headlabel="inner_elif_statements 0..*"]
2225851534224 -> 2225851534384[arrowtail=diamond, dir=both, headlabel="inner_else_statements 0..*"]
2225851534384 -> 2225851442640 [dir=back]
2225851534384 -> 2225850994320 [dir=back]
2225850378160 -> 2225849866192 [dir=back]
2225850378160 -> 2225851572816 [dir=back]
2225851442640 -> 2225851572176[arrowtail=diamond, dir=both, headlabel="val "]
2225851441360 -> 2225851572304[arrowtail=diamond, dir=both, headlabel="first "]
2225851441360 -> 2225851572304[arrowtail=diamond, dir=both, headlabel="second "]
2225849866192 -> 2225851572560[arrowtail=diamond, dir=both, headlabel="first "]
2225849866192 -> 2225851572560[arrowtail=diamond, dir=both, headlabel="second "]
2225851571664 -> 2225851573072 [dir=back]
2225851571664 -> 2225851572816 [dir=back]
2225851571664 -> 2225851572944 [dir=back]
2225851571792 -> 2225850432832 [dir=back]
2225851571792 -> 2225851572944 [dir=back]
2225851571792 -> 2225851572816 [dir=back]
2225851572176 -> 2225851441360 [dir=back]
2225851572176 -> 2225849866192 [dir=back]
2225851572176 -> 2225851045232 [dir=back]
2225851572176 -> 2225851572816 [dir=back]
2225851572176 -> 2225851572944 [dir=back]
2225851572176 -> 2225850432832 [dir=back]
2225851572304 -> 2225851045232 [dir=back]
2225851572304 -> 2225851572816 [dir=back]
2225851572304 -> 2225851572944 [dir=back]
2225851572304 -> 2225850432832 [dir=back]
2225851572560 -> 2225851441360 [dir=back]
2225851572560 -> 2225851572816 [dir=back]
2225851572560 -> 2225851572944 [dir=back]
2225851572560 -> 2225851045232 [dir=back]
2225851572560 -> 2225850432832 [dir=back]
match_rules [ shape=plaintext, label=< <table>
	<tr>
		<td><b>ComparisonOperator</b></td><td>is not less than or equal to|is not greater than or equal to|is not less than|is not greater than|is not equal to|is less than or equal to|is greater than or equal to|is less than|is greater than|is equal to</td>
	</tr>
	<tr>
		<td><b>OperationOperator</b></td><td>plus|minus|divided by|times|modulo|to the power of</td>
	</tr>
	<tr>
		<td><b>PossibleIgnoreStatement</b></td><td>(.|\n)*?(?=end ignore)</td>
	</tr>
	<tr>
		<td><b>Type</b></td><td>number|string|boolean|nothing</td>
	</tr>
	<tr>
		<td><b>Variable</b></td><td>STRING|ID|NUMBER|BOOL</td>
	</tr>
</table> >]


}
